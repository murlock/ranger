# PUPPET: etf1_tengine/templates/vidorg_tengine.conf.erb 

#----------------------------------------------------------------------
# Main Module - directives that cover basic functionality
#----------------------------------------------------------------------
worker_processes  16;
worker_rlimit_nofile 80000;

user              nginx nginx;
error_log         /var/log/nginx/nginx_error.log;
pid               /var/run/nginx.pid;

#----------------------------------------------------------------------
# Events Module
#----------------------------------------------------------------------
events {
    worker_connections  10000;
    multi_accept on;
    accept_mutex_delay 1ms;
}

#----------------------------------------------------------------------
# HTTP Core Module
#----------------------------------------------------------------------
http {


    proxy_cache_path /dev/shm/nginx/ levels=1:2 keys_zone=default:1000m inactive=24h max_size=1000m;
    lua_package_path "/opt/nginx/ranger/external/nginx_log_by_lua/?.lua;/opt/nginx/ranger/external/lua-resty-http/lib/?.lua;/root/ranger/external/nginx_log_by_lua/?.lua;/opt/nginx/ranger/external/bitset/lib/?.lua;;";

    map $request_method $disable_cache {
		HEAD 1;
		default 0;
    }


	lua_shared_dict file_dict 5M;
	lua_shared_dict log_dict 1M;
	lua_shared_dict cache_dict 1M;
	lua_shared_dict chunk_dict 10M;
	init_by_lua_file '/opt/nginx/ranger/init.lua';

    add_header  X-Who org601;
    # MIME TYPES.
    include      /etc/nginx/mime.types;
    default_type application/octet-stream;

    # LOGS.
    log_format main '$remote_addr - $remote_user [$time_local]  '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    '$request_time $upstream_response_time $pipe "$http_range"';

    access_log /var/log/nginx/nginx_access.log main buffer=16k;

    ###############################################
    # TUNING.
    server_tokens off;
    
    #sendfile     on;
    #sendfile_max_chunk 256k;
    tcp_nodelay  on;
    tcp_nopush   on;
    ignore_invalid_headers on;

    #client_header_timeout  16;
    #client_body_timeout    17;

    keepalive_timeout      60;
    keepalive_requests     100000;
    #send_timeout           18;
    reset_timedout_connection on;

    #gzip off;
    #gzip_min_length 10240;
    #gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml application/vnd.apple.mpegurl;
    #gzip_proxied expired no-cache no-store private auth;
    #gzip_disable "MSIE [1-6]\.";

    #output_buffers   1000 32k;
    #postpone_output  1460;

    open_file_cache max=800000 inactive=60s;
    open_file_cache_valid    30s;
    open_file_cache_min_uses 1;
    open_file_cache_errors   off;

    # Error pages
    error_page 400 403 404 405 /error4xx.html;
    error_page 500 501 502 503 504 505 /error5xx.html;

    root /var/www/vide ;

    ###############################################
    # DEFAULT VHOST.
    server {
        #listen       80 default;
        listen        88 default;
        #listen       8081 default;
        #listen       8082 default;
        #listen       8083 default;
        #listen       8084 default;
        #listen       8085 default;
        server_name  _;

        root /var/www/vide ;
        index  test.html ;

        ## Only allow GET and HEAD request methods
        # 444 : This is a custom error code understood by the Nginx daemon to mean,
        # "Close the connection using a tcp reset with the client without sending any headers."
        ######
        if ($request_method !~ ^(GET|HEAD)$ ) {
                return 444;
        }

        location /test.html {
                error_page 404 405 /error4xx.html;
                access_log   off;
                error_log /dev/null crit;
                open_file_cache off;
        }

        # Supervision
        location ~* (server-status|nginx_status) {
                access_log   off;
                allow 127.0.0.1;
                allow 10.0.0.0/8;
                allow 172.31.0.0/16;
                allow 193.169.66.0/23;
                allow 185.22.116.0/22;
                allow 193.164.156.0/24;
                deny all;
        }
        # Supervision
        location /requete {
                access_log   off;
                allow 127.0.0.1;
                allow 10.0.0.0/8;
                allow 172.31.0.0/16;
                allow 193.169.66.0/23;
                allow 185.22.116.0/22;
                allow 193.164.156.0/24;
                deny all;
        }
    }

    # Load config files from the /etc/nginx/conf.d directory
    include /etc/nginx/conf.d/*.conf;

}
